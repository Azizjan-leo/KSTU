/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Encryption;

/**
 *
 * @author Snow
 */
public class Analityc extends javax.swing.JFrame {

    /**
     * Creates new form Analityc
     */
    public Analityc() {
        initComponents();
        CYR.setSelected(true);
        Encrypt.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Language = new javax.swing.ButtonGroup();
        RunType = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextField = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        CYR = new javax.swing.JRadioButton();
        Encrypt = new javax.swing.JRadioButton();
        LAT = new javax.swing.JRadioButton();
        Run = new javax.swing.JButton();
        Decrypt = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        key = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        mSize = new javax.swing.JTextField();
        strDec = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextField.setColumns(20);
        TextField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TextField.setRows(5);
        TextField.setText("гатала");
        jScrollPane1.setViewportView(TextField);

        jLabel1.setText("Ключ:");

        Language.add(CYR);
        CYR.setText("Кириллица");

        RunType.add(Encrypt);
        Encrypt.setText("Зашифровать");

        Language.add(LAT);
        LAT.setText("Латиница");

        Run.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Run.setText("Выполнить");
        Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunActionPerformed(evt);
            }
        });

        RunType.add(Decrypt);
        Decrypt.setText("Расшифровать");

        key.setColumns(20);
        key.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        key.setRows(5);
        key.setText("14 8 3\n8 5 2\n3 2 1");
        jScrollPane2.setViewportView(key);

        jLabel2.setText("Размер матрицы(nxn):");

        mSize.setText("3");

        strDec.setText("6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Encrypt)
                                    .addComponent(Decrypt))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LAT)
                                    .addComponent(CYR))
                                .addGap(18, 18, 18)
                                .addComponent(Run, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mSize)
                                            .addComponent(strDec)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2)))
                                .addGap(23, 23, 23)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(strDec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Encrypt)
                            .addComponent(CYR))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Decrypt)
                            .addComponent(LAT)))
                    .addComponent(Run, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunActionPerformed
        if(TextField.getText() != ""){
            if(Encrypt.isSelected()){ //if encrypt choosed
                if(CYR.isSelected()) //if cyr choosed call encryption method with cyrillic
                TextField.setText(Encryption.Methods.AnalitycEncrypt(TextField.getText(),
                        Encryption.Methods.BuildMatrix(key.getText(), Integer.parseInt(mSize.getText())),
                        Integer.parseInt(mSize.getText()), "CYR", true));
                else
                TextField.setText(Encryption.Methods.AnalitycEncrypt(TextField.getText(),
                        Encryption.Methods.BuildMatrix(key.getText(), Integer.parseInt(mSize.getText())),
                        Integer.parseInt(mSize.getText()), "LAT", true));
            }else{ //if decryption choosed
                if(CYR.isSelected() == true) //if cyr choosed call encryption method with cyrillic
                {
                    int[]strMatrix = Encryption.Methods.BuildMatrixOneDimensional(TextField.getText(), Integer.parseInt(strDec.getText()));
                    int[][]keyMatrix = Encryption.Methods.BuildMatrix(key.getText(), Integer.parseInt(mSize.getText()));
                    int [][]invert = keyMatrix;
                    invert = Encryption.Methods.inversion(invert);
                    TextField.setText(Encryption.Methods.AnalitycDecrypt(
                       strMatrix, strMatrix.length,
                        invert,
                        Integer.parseInt(mSize.getText()), "CYR", true));
                }
                else{
                    int[]strMatrix = Encryption.Methods.BuildMatrixOneDimensional(TextField.getText(), Integer.parseInt(strDec.getText()));
                    int[][]keyMatrix = Encryption.Methods.BuildMatrix(key.getText(), Integer.parseInt(mSize.getText()));
                    int [][]invert = keyMatrix;
                    invert = Encryption.Methods.inversion(invert);
                    TextField.setText(Encryption.Methods.AnalitycDecrypt(
                       strMatrix, strMatrix.length,
                        invert,
                        Integer.parseInt(mSize.getText()), "LAT", true));
                }
                
            }
        }
    }//GEN-LAST:event_RunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analityc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analityc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analityc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analityc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analityc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton CYR;
    private javax.swing.JRadioButton Decrypt;
    private javax.swing.JRadioButton Encrypt;
    private javax.swing.JRadioButton LAT;
    private javax.swing.ButtonGroup Language;
    private javax.swing.JButton Run;
    private javax.swing.ButtonGroup RunType;
    private javax.swing.JTextArea TextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea key;
    private javax.swing.JTextField mSize;
    private javax.swing.JTextField strDec;
    // End of variables declaration//GEN-END:variables
}
