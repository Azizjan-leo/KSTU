package jnewpack;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Snow
 */
public class listForm extends javax.swing.JFrame {

    /**
     * Variables
     */
    
    String question = "";
    String [] answers = new String[5];
    String _correctAnswer = "";
    int stage = 1;
    int correctAnswers = 0;
    String answerExplanation = "";
    String userAnswer = "";
    DefaultListModel model;
    
    /**
     * Creates new form listForm
     */
    public listForm() {
        initComponents();
        model = new DefaultListModel();
        question();
        questionPanel.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listbox = new javax.swing.JList();
        questionCaption = new javax.swing.JLabel();
        answerButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionPanel = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listbox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(listbox);

        questionCaption.setText("Вопрос:");

        answerButton.setText("Ответить");
        answerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(questionPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(answerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(questionCaption)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(questionCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(answerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void answerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButtonActionPerformed
        if(!answerButton.getText().equals("С начала")){
            userAnswer = (String) listbox.getSelectedValue();
            correctAnswerMethod();
            question();
        }
        else
        {
         answerButton.setText("Ответить");
         question();
        }
    }//GEN-LAST:event_answerButtonActionPerformed

    private void question(){
        switch(stage){
            case 1:
                question = "Как можно уничтожить объект в Java?";
                answers[0] = "1. присвоить null всем ссылкам на объект";
                answers[1] = "2. вызвать Runtime.getRuntime().gc()";
                answers[2] = "3. вызвать метод finalize() у объекта";
                answers[3] = "4. этого нельзя сделать вручную";
                answers[4] = "5. вызвать деструктор у объекта";
                _correctAnswer = "4. этого нельзя сделать вручную";
                answerExplanation = "Правильный ответ - 4 - этого нельзя сделать вручную.\n"
                        + "Метод finalize используется в основном для освобождения ресурсов перед уничтожением объекта. Понятия деструктор в java нет (деструкторы есть в c++).\n"
                        + "Вызов Runtime.getRuntime().gc() всего лишь дает запрос виртуальной машине о том, что было бы неплохо начать сборку мусора.\n"
                        + "Наконец присвоение всем ссылкам на объект значения null сделает объект доступным для сборщика мусора,\n"
                        + " но нет никакой гарантии, когда сборка мусора начнется и начнется ли вообще.";
                break;
            case 2:
                question = "Определена следующая переменная строкового типа: String s = \"abc\";\nКакие из перечисленных ниже операций допустимы?";
                answers[0] = "1. int i = s[0];";
                answers[1] = "2. s += s + s;";
                answers[2] = "3. s = 2 * s; ";
                answers[3] = "4. s = (String) (46 >> 2); ";
                answers[4] = "";
                _correctAnswer = "2. s += s + s;";
                answerExplanation = "Пояснение: Строковое преобразование (String conversion) в языке Java\n осуществляется неявно и только в одном случае: при конкатенации (склеивании) строки и не-строки.\n" +
                        "Например, допустимой будет такая конструкция:\n" +
                        "s = \"\" + (46 >> 2); // пустая строка + число\n" +
                        "В этом случае число будет неявно преобразовано в строку.";
                break;
            case 3:
                question = "Что попадет в стандартный поток вывода, если метод tryThis() выбросит IOException?\n"
                        + "try { \n" +
                        "    tryThis(); \n" +
                        "    return; \n" +
                        "} catch (IOException x1) { \n" +
                        "    System.out.println(\"exception 1\"); \n" +
                        "    return; \n" +
                        "} catch (Exception x2) { \n" +
                        "    System.out.println(\"exception 2\"); \n" +
                        "    return; \n" +
                        "} finally { \n" +
                        "    System.out.println(\"finally\"); \n" +
                        "} ";
                answers[0] = "1. exception 1";
                answers[1] = "2. exception 1 и finally";
                answers[2] = "3. exception 2";
                answers[3] = "4. finally";
                answers[4] = "5. exception 2 и finally";
                _correctAnswer = "2. exception 1 и finally";
                answerExplanation = "";
                break;
        }
        writeTo();
    }
    
    private void correctAnswerMethod(){
        if(_correctAnswer.equals(userAnswer)){
            JOptionPane.showMessageDialog(null, "Правильно");
            correctAnswers++;
        }
        else
            JOptionPane.showMessageDialog(null, "Не правильно");
        if(stage!=3)
            stage++;
        else{
            JOptionPane.showMessageDialog(null, "Вопросов: " + stage + "\nПравильных ответов: " + correctAnswers);
            answerButton.setText("С начала");
            stage = 1;
            correctAnswers = 0;
        }
    }
    
    private void writeTo(){
        model.clear();
        for(int i=0; i<5; i++){
            if(!answers[i].equals(""))
                model.addElement(answers[i]);
        }
        listbox.setModel(model);
        questionPanel.setText(question);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton answerButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listbox;
    private javax.swing.JLabel questionCaption;
    private javax.swing.JTextPane questionPanel;
    // End of variables declaration//GEN-END:variables
}
